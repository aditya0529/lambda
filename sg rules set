import sys, json, boto3
import logging
import os
from botocore.exceptions import ClientError

LOG_LEVEL = os.getenv('LOG_LEVEL', logging.INFO)
logger = logging.getLogger()
logger.setLevel(LOG_LEVEL)

def handler(event, context):
    logger.info(f"Input Event: {json.dumps(event)}")

    try:
        # Your existing code logic here
        
        # Check if 'ResponseURL' exists in the event (CloudFormation request)
        if 'ResponseURL' in event:
            # CloudFormation logic with cfresponse
            import cfresponse
            logger.info("CloudFormation invocation detected, using cfresponse")
            # Your logic with cfresponse
            cfresponse.send(event, context, cfresponse.SUCCESS, {})
        else:
            # Non-CloudFormation logic (no ResponseURL)
            logger.info("Non-CloudFormation invocation, skipping cfresponse")
            # Your normal logic without cfresponse
        
    except Exception as ex:
        logger.error(f"Exception encountered: {str(ex)}")
        if 'ResponseURL' in event:
            import cfresponse
            cfresponse.send(event, context, cfresponse.FAILED, {'Message': str(ex)})
        else:
            return {
                'statusCode': 500,
                'body': json.dumps(f"Error: {str(ex)}")
            }

    logger.info("Handler execution completed")
